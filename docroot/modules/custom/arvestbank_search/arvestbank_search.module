<?php

/**
 * @file
 * Contains view hooks relating to search.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_views_data_alter().
 *
 * @param array $data
 */
function arvestbank_search_views_data_alter(array &$data) {

  // Add our custom tabs filter.
  $data['search_api_index_database_search_index']['arvest_search_tabs'] = [
    'filter' => [
      'title' => t('Arvest Search Tabs'),
      'help' => t('Provides a tabs for the arvest search.'),
      'field' => 'type',
      'id' => 'arvest_search_tabs',
    ],
  ];

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function arvestbank_search_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Get form storage.
  $storage = $form_state->getStorage();

  // If this is the search page.
  if (
    $storage['view']->id() == 'database_search'
    && isset($storage['search_page'])
    && $storage['search_page']
  ) {
    // Add class to this form for css changes.
    $form['#attributes']['class'][] = 'tabs-form';
    // Hide submit button.
    $form['actions']['submit']['#access'] = FALSE;
    // Set default value for search based on get variable.
    if (isset($_GET['search']) && $_GET['search']) {
      $form['search']['#default_value'] = $_GET['search'];
    }
  }

  // If this is the header search or the alt search bar.
  else {
    // Add class to this form.
    $form['#attributes']['class'][] = 'search-form';
    // Hide tabs.
    $form['search-tab']['#access'] = FALSE;
    // Add "Ask Arvest" autocomplete.
    $form['search']['#autocomplete_route_name'] = 'arvestbank_search.ask_arvest_autocomplete';
    // Attach Ask Arvest js.
    $form['search']['#attached'] = [
      'library' => ['arvestbank_search/ask-arvest'],
    ];
    // Add weight to get search after hidden suggestion field.
    $form['search']['#weight'] = 2;
    // Change placeholder text for search bar.
    $form['search']['#attributes']['placeholder'] = 'Enter a question or keyword.';
    // Add hidden field indicating if a suggestion was used.
    $form['source'] = [
      '#type' => 'hidden',
      '#value' => FALSE,
      '#attributes' => [
        'class' => ['suggestion-field'],
      ],
      '#weight' => 1,
    ];
  }

  // If this is the alternate search bar block.
  if (
    $storage['view']->id() == 'database_search'
    && isset($storage['alt_search_block'])
    && $storage['alt_search_block']
  ) {
    // Put heading at beginning.
    $form['title'] = [
      '#markup' => '<h2>Ask a QUESTION or Enter a KEYWORD</h2>',
      '#weight' => 0,
    ];
    // Change placeholder text for search bar.
    $form['search']['#attributes']['placeholder'] = 'Have a question? Ask it here.';
    // Move submit before help text.
    $form['actions']['#weight'] = 3;
    // Put help text at the end.
    $form['help-text'] = [
      '#markup' => '<p>Example Question: What is my routing number?</p><p>Example Keyword: routing number</p>',
      '#weight' => 4,
    ];
  }

}
